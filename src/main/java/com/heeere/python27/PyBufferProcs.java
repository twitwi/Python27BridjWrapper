package com.heeere.python27;
import com.heeere.python27.Python27Library.charbufferproc;
import com.heeere.python27.Python27Library.getbufferproc;
import com.heeere.python27.Python27Library.readbufferproc;
import com.heeere.python27.Python27Library.releasebufferproc;
import com.heeere.python27.Python27Library.segcountproc;
import com.heeere.python27.Python27Library.writebufferproc;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : object.h:132</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("python27") 
public class PyBufferProcs extends StructObject {
	public PyBufferProcs() {
		super();
	}
	/// C type : readbufferproc
	@Field(0) 
	public Pointer<readbufferproc > bf_getreadbuffer() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : readbufferproc
	@Field(0) 
	public PyBufferProcs bf_getreadbuffer(Pointer<readbufferproc > bf_getreadbuffer) {
		this.io.setPointerField(this, 0, bf_getreadbuffer);
		return this;
	}
	/// C type : writebufferproc
	@Field(1) 
	public Pointer<writebufferproc > bf_getwritebuffer() {
		return this.io.getPointerField(this, 1);
	}
	/// C type : writebufferproc
	@Field(1) 
	public PyBufferProcs bf_getwritebuffer(Pointer<writebufferproc > bf_getwritebuffer) {
		this.io.setPointerField(this, 1, bf_getwritebuffer);
		return this;
	}
	/// C type : segcountproc
	@Field(2) 
	public Pointer<segcountproc > bf_getsegcount() {
		return this.io.getPointerField(this, 2);
	}
	/// C type : segcountproc
	@Field(2) 
	public PyBufferProcs bf_getsegcount(Pointer<segcountproc > bf_getsegcount) {
		this.io.setPointerField(this, 2, bf_getsegcount);
		return this;
	}
	/// C type : charbufferproc
	@Field(3) 
	public Pointer<charbufferproc > bf_getcharbuffer() {
		return this.io.getPointerField(this, 3);
	}
	/// C type : charbufferproc
	@Field(3) 
	public PyBufferProcs bf_getcharbuffer(Pointer<charbufferproc > bf_getcharbuffer) {
		this.io.setPointerField(this, 3, bf_getcharbuffer);
		return this;
	}
	/// C type : getbufferproc
	@Field(4) 
	public Pointer<getbufferproc > bf_getbuffer() {
		return this.io.getPointerField(this, 4);
	}
	/// C type : getbufferproc
	@Field(4) 
	public PyBufferProcs bf_getbuffer(Pointer<getbufferproc > bf_getbuffer) {
		this.io.setPointerField(this, 4, bf_getbuffer);
		return this;
	}
	/// C type : releasebufferproc
	@Field(5) 
	public Pointer<releasebufferproc > bf_releasebuffer() {
		return this.io.getPointerField(this, 5);
	}
	/// C type : releasebufferproc
	@Field(5) 
	public PyBufferProcs bf_releasebuffer(Pointer<releasebufferproc > bf_releasebuffer) {
		this.io.setPointerField(this, 5, bf_releasebuffer);
		return this;
	}
	public PyBufferProcs(Pointer pointer) {
		super(pointer);
	}
}
