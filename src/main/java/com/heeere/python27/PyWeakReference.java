package com.heeere.python27;
import com.heeere.python27.Python27Library.Py_ssize_t;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * PyWeakReference is the base struct for the Python ReferenceType, ProxyType,<br>
 * and CallableProxyType.<br>
 * <i>native declaration : weakrefobject.h:34</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("python27") 
public class PyWeakReference extends StructObject {
	public PyWeakReference() {
		super();
	}
	/// C type : Py_ssize_t
	@Field(0) 
	public Pointer<Py_ssize_t > ob_refcnt() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : Py_ssize_t
	@Field(0) 
	public PyWeakReference ob_refcnt(Pointer<Py_ssize_t > ob_refcnt) {
		this.io.setPointerField(this, 0, ob_refcnt);
		return this;
	}
	/// C type : _typeobject*
	@Field(1) 
	public Pointer<PyTypeObject > ob_type() {
		return this.io.getPointerField(this, 1);
	}
	/// C type : _typeobject*
	@Field(1) 
	public PyWeakReference ob_type(Pointer<PyTypeObject > ob_type) {
		this.io.setPointerField(this, 1, ob_type);
		return this;
	}
	/**
	 * The object to which this is a weak reference, or Py_None if none.<br>
	 * Note that this is a stealth reference:  wr_object's refcount is<br>
	 * not incremented to reflect this pointer.<br>
	 * C type : PyObject*
	 */
	@Field(2) 
	public Pointer<PyObject > wr_object() {
		return this.io.getPointerField(this, 2);
	}
	/**
	 * The object to which this is a weak reference, or Py_None if none.<br>
	 * Note that this is a stealth reference:  wr_object's refcount is<br>
	 * not incremented to reflect this pointer.<br>
	 * C type : PyObject*
	 */
	@Field(2) 
	public PyWeakReference wr_object(Pointer<PyObject > wr_object) {
		this.io.setPointerField(this, 2, wr_object);
		return this;
	}
	/**
	 * A callable to invoke when wr_object dies, or NULL if none.<br>
	 * C type : PyObject*
	 */
	@Field(3) 
	public Pointer<PyObject > wr_callback() {
		return this.io.getPointerField(this, 3);
	}
	/**
	 * A callable to invoke when wr_object dies, or NULL if none.<br>
	 * C type : PyObject*
	 */
	@Field(3) 
	public PyWeakReference wr_callback(Pointer<PyObject > wr_callback) {
		this.io.setPointerField(this, 3, wr_callback);
		return this;
	}
	/**
	 * A cache for wr_object's hash code.  As usual for hashes, this is -1<br>
	 * if the hash code isn't known yet.
	 */
	@CLong 
	@Field(4) 
	public long hash() {
		return this.io.getCLongField(this, 4);
	}
	/**
	 * A cache for wr_object's hash code.  As usual for hashes, this is -1<br>
	 * if the hash code isn't known yet.
	 */
	@CLong 
	@Field(4) 
	public PyWeakReference hash(long hash) {
		this.io.setCLongField(this, 4, hash);
		return this;
	}
	/**
	 * If wr_object is weakly referenced, wr_object has a doubly-linked NULL-<br>
	 * terminated list of weak references to it.  These are the list pointers.<br>
	 * If wr_object goes away, wr_object is set to Py_None, and these pointers<br>
	 * have no meaning then.<br>
	 * C type : PyWeakReference*
	 */
	@Field(5) 
	public Pointer<PyWeakReference > wr_prev() {
		return this.io.getPointerField(this, 5);
	}
	/**
	 * If wr_object is weakly referenced, wr_object has a doubly-linked NULL-<br>
	 * terminated list of weak references to it.  These are the list pointers.<br>
	 * If wr_object goes away, wr_object is set to Py_None, and these pointers<br>
	 * have no meaning then.<br>
	 * C type : PyWeakReference*
	 */
	@Field(5) 
	public PyWeakReference wr_prev(Pointer<PyWeakReference > wr_prev) {
		this.io.setPointerField(this, 5, wr_prev);
		return this;
	}
	/// C type : PyWeakReference*
	@Field(6) 
	public Pointer<PyWeakReference > wr_next() {
		return this.io.getPointerField(this, 6);
	}
	/// C type : PyWeakReference*
	@Field(6) 
	public PyWeakReference wr_next(Pointer<PyWeakReference > wr_next) {
		this.io.setPointerField(this, 6, wr_next);
		return this;
	}
	public PyWeakReference(Pointer pointer) {
		super(pointer);
	}
}
