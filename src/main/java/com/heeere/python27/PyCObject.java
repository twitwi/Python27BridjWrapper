package com.heeere.python27;
import com.heeere.python27.Python27Library.Py_ssize_t;
import org.bridj.Callback;
import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
/**
 * <i>native declaration : cobject.h:45</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("python27") 
public class PyCObject extends StructObject {
	public PyCObject() {
		super();
	}
	/// C type : Py_ssize_t
	@Field(0) 
	public Pointer<Py_ssize_t > ob_refcnt() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : Py_ssize_t
	@Field(0) 
	public PyCObject ob_refcnt(Pointer<Py_ssize_t > ob_refcnt) {
		this.io.setPointerField(this, 0, ob_refcnt);
		return this;
	}
	/// C type : _typeobject*
	@Field(1) 
	public Pointer<PyTypeObject > ob_type() {
		return this.io.getPointerField(this, 1);
	}
	/// C type : _typeobject*
	@Field(1) 
	public PyCObject ob_type(Pointer<PyTypeObject > ob_type) {
		this.io.setPointerField(this, 1, ob_type);
		return this;
	}
	/// C type : void*
	@Field(2) 
	public Pointer<? > cobject() {
		return this.io.getPointerField(this, 2);
	}
	/// C type : void*
	@Field(2) 
	public PyCObject cobject(Pointer<? > cobject) {
		this.io.setPointerField(this, 2, cobject);
		return this;
	}
	/// C type : void*
	@Field(3) 
	public Pointer<? > desc() {
		return this.io.getPointerField(this, 3);
	}
	/// C type : void*
	@Field(3) 
	public PyCObject desc(Pointer<? > desc) {
		this.io.setPointerField(this, 3, desc);
		return this;
	}
	/// C type : destructor_callback
	@Field(4) 
	public Pointer<PyCObject.destructor_callback > destructor() {
		return this.io.getPointerField(this, 4);
	}
	/// C type : destructor_callback
	@Field(4) 
	public PyCObject destructor(Pointer<PyCObject.destructor_callback > destructor) {
		this.io.setPointerField(this, 4, destructor);
		return this;
	}
	/// <i>native declaration : cobject.h:44</i>
	/// <i>native declaration : cobject.h:44</i>
	public static abstract class destructor_callback extends Callback<destructor_callback > {
		abstract public void apply(Pointer<? > voidPtr1);
	};
	public PyCObject(Pointer pointer) {
		super(pointer);
	}
}
