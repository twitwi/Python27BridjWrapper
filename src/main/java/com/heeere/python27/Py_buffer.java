package com.heeere.python27;
import org.bridj.Pointer;
import org.bridj.SizeT;
import org.bridj.StructObject;
import org.bridj.ann.Array;
import org.bridj.ann.Field;
import org.bridj.ann.Library;
import org.bridj.ann.Ptr;
/**
 * <i>native declaration : object.h:57</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("python27") 
public class Py_buffer extends StructObject {
	public Py_buffer() {
		super();
	}
	/// C type : void*
	@Field(0) 
	public Pointer<? > buf() {
		return this.io.getPointerField(this, 0);
	}
	/// C type : void*
	@Field(0) 
	public Py_buffer buf(Pointer<? > buf) {
		this.io.setPointerField(this, 0, buf);
		return this;
	}
	/**
	 * owned reference<br>
	 * C type : PyObject*
	 */
	@Field(1) 
	public Pointer<PyObject > obj() {
		return this.io.getPointerField(this, 1);
	}
	/**
	 * owned reference<br>
	 * C type : PyObject*
	 */
	@Field(1) 
	public Py_buffer obj(Pointer<PyObject > obj) {
		this.io.setPointerField(this, 1, obj);
		return this;
	}
	/// C type : Py_ssize_t
	@Ptr 
	@Field(2) 
	public long len() {
		return this.io.getSizeTField(this, 2);
	}
	/// C type : Py_ssize_t
	@Ptr 
	@Field(2) 
	public Py_buffer len(long len) {
		this.io.setSizeTField(this, 2, len);
		return this;
	}
	/**
	 * This is Py_ssize_t so it can be<br>
	 * pointed to by strides in simple case.<br>
	 * C type : Py_ssize_t
	 */
	@Ptr 
	@Field(3) 
	public long itemsize() {
		return this.io.getSizeTField(this, 3);
	}
	/**
	 * This is Py_ssize_t so it can be<br>
	 * pointed to by strides in simple case.<br>
	 * C type : Py_ssize_t
	 */
	@Ptr 
	@Field(3) 
	public Py_buffer itemsize(long itemsize) {
		this.io.setSizeTField(this, 3, itemsize);
		return this;
	}
	@Field(4) 
	public int readonly() {
		return this.io.getIntField(this, 4);
	}
	@Field(4) 
	public Py_buffer readonly(int readonly) {
		this.io.setIntField(this, 4, readonly);
		return this;
	}
	@Field(5) 
	public int ndim() {
		return this.io.getIntField(this, 5);
	}
	@Field(5) 
	public Py_buffer ndim(int ndim) {
		this.io.setIntField(this, 5, ndim);
		return this;
	}
	/// C type : char*
	@Field(6) 
	public Pointer<Byte > format() {
		return this.io.getPointerField(this, 6);
	}
	/// C type : char*
	@Field(6) 
	public Py_buffer format(Pointer<Byte > format) {
		this.io.setPointerField(this, 6, format);
		return this;
	}
	/// C type : Py_ssize_t*
	@Field(7) 
	public Pointer<SizeT > shape() {
		return this.io.getPointerField(this, 7);
	}
	/// C type : Py_ssize_t*
	@Field(7) 
	public Py_buffer shape(Pointer<SizeT > shape) {
		this.io.setPointerField(this, 7, shape);
		return this;
	}
	/// C type : Py_ssize_t*
	@Field(8) 
	public Pointer<SizeT > strides() {
		return this.io.getPointerField(this, 8);
	}
	/// C type : Py_ssize_t*
	@Field(8) 
	public Py_buffer strides(Pointer<SizeT > strides) {
		this.io.setPointerField(this, 8, strides);
		return this;
	}
	/// C type : Py_ssize_t*
	@Field(9) 
	public Pointer<SizeT > suboffsets() {
		return this.io.getPointerField(this, 9);
	}
	/// C type : Py_ssize_t*
	@Field(9) 
	public Py_buffer suboffsets(Pointer<SizeT > suboffsets) {
		this.io.setPointerField(this, 9, suboffsets);
		return this;
	}
	/**
	 * static store for shape and strides of<br>
	 * mono-dimensional buffers.<br>
	 * C type : Py_ssize_t[2]
	 */
	@Array({2}) 
	@Field(10) 
	public Pointer<SizeT > smalltable() {
		return this.io.getPointerField(this, 10);
	}
	/// C type : void*
	@Field(11) 
	public Pointer<? > internal() {
		return this.io.getPointerField(this, 11);
	}
	/// C type : void*
	@Field(11) 
	public Py_buffer internal(Pointer<? > internal) {
		this.io.setPointerField(this, 11, internal);
		return this;
	}
	public Py_buffer(Pointer pointer) {
		super(pointer);
	}
}
